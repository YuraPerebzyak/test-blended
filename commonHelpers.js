(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))a(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const i of o.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&a(i)}).observe(document,{childList:!0,subtree:!0});function s(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function a(e){if(e.ep)return;e.ep=!0;const o=s(e);fetch(e.href,o)}})();function d(r,t){try{const s=JSON.stringify(t);localStorage.setItem(r,s)}catch(s){console.error("Set state Error",s.message)}}function f(r){try{const t=localStorage.getItem(r);return t===null?[]:JSON.parse(t)}catch(t){console.error("Get state Error",t.message)}}const u="tasks",n=f(u),c={taskForm:document.querySelector("#task-form"),taskList:document.querySelector("#task-list")};function l(r){const t=r.map(s=>`<li class="task-list-item"> ${s}
    <button type="button">Видалити</button>
  </li>`).join("");c.taskList.innerHTML=t}function m(r){r.preventDefault();const t=r.target.elements.taskName.value.trim();n.push(t),l(n),d(u,n),r.target.reset()}function p(r){l(n)}function g(r){r.target.nodeName}document.addEventListener("DOMContentLoaded",p);c.taskForm.addEventListener("submit",m);c.taskList.addEventListener("click",g);
//# sourceMappingURL=commonHelpers.js.map
